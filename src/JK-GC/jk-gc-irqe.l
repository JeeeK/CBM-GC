	ISVAREND	= $c6dd	; ?
	CPTR	= $22	; unused
	NOSTRING	= $c770	; ?
	VARTAB	= $2d
	GETSA	= $c69d	; ?
	DSTACK	= $c6ab
	MARKECOL	= $dbe7
	IRQ	= $c521	; ?
	ARRAY	= $c74a	; ?
	STAT_VAR	= $3
	HOOK	= $c50f	; ?
	GC_CRIT_END	= $b638
	NEXTARR	= $c721	; ?
	IS0ASTR	= $c75f	; ?
	INSTEXIT	= $c51f	; ?
	KERNAL	= $e000
	BERANF	= $4c
	BEREND	= $5d
	BASIC	= $a000	; unused
	GARBCOL	= $b526	; unused
	TO_COLLECT	= $c5a6	; ?
	COLBASE	= $d800
	CORR_STR	= $c53d	; ?
	CHK_PC	= $c568	; ?
	NOCOPY	= $c69a	; ?
	EXIT	= $c613	; ?
	ZPLEN	= $7
	SAVE	= $c7be	; ?
	STRDP	= $22
	LASTRANGE	= $c609	; ?
	FRETOP	= $33
	COPYBACK	= $c673	; ?
	MARKEVID	= $7e7
	VAR	= $c6d2
	NEXTSTR1	= $c633
	PTR	= $50
	ISDSTEND	= $c6b0	; ?
	ADVDESC	= $c74d	; ?
	STAT_ARY	= $1
	NEXTBYT	= $c658
	STRINRANGE	= $c62a	; ?
	ZPSTART	= $4c
	IN_SUB	= $c55b	; ?
	NEXTVAR	= $c6d2
	BUF	= $e000
	GC_PHP_START	= $b58a
	EOSS	= $22	; unused
	GC_PHP_END	= $b598
	MOVBLOCK	= $c784	; ?
	MARKE	= $2a
	ISARREND	= $c715
	NEXTASTR	= $c74a
	STAT	= $57
	SAVLOOP	= $c5d0
	PROZPORT	= $1
	GC_CRIT_START	= $b632
	NEXTBLOCK	= $c5e4
	BUFSIZE	= $2000
	DESCSTACK	= $c69f	; unused
	ZPEND	= $52
	COLLECT	= $c5b8	; unused
	NEWPTR	= $4e
	TOSS	= $19
	VIDBASE	= $400
	no_basic_rom_buffer	= $1	; unused
	V_IRQ	= $314
	MEMEND	= $37
	IN_OPSP	= $c531	; unused
	ORIGVID	= $c7ba	; ?
	TSSP	= $16
	STREND	= $31
	MARKEOFF	= $3e7
	CHK_SNS	= $c54b	; ?
	NEXTSTR	= $c632
	START_COLLECT	= $c5b4	; ?
	CALLER_SNS2	= $b54a
	STRADR	= $58
	SKIPSUB	= $c5b2	; ?
	CALLER_SNS3	= $b5ba
	ROMSIZE	= $2000
	CALLER_SNS1	= $b563
	CHECKVAR	= $c6e7	; ?
	MEMSIZ	= $37
	CORR	= $c775	; ?
	CONT	= $c565	; ?
	ARRAYS	= $c70d	; ?
	LEN1	= $c65f	; unused
	INSTALL	= $c500	; unused
	CALLER_OPSP	= $b62a
	NBENTRY	= $c65c	; ?
	GC_END	= $b63c
	CHECKTYPE	= $c702	; ?
	VARS	= $c6c4	; ?
	CHKAEND	= $c719
	MEMBEG	= $31	; unused
	BUFPTR	= $5f
	ORIGCOL	= $c7bb	; ?
	MEMROM	= $37	; unused
	GC_START	= $b526
	MEMRAM	= $35
	NEXTDST	= $c6ad
	ARYTAB	= $2f
	MEMBAS	= $36	; unused
	STAT_SDS	= $5
	copy	= $c7ab	; ?
	MARKEFARBE	= $9
	STRPTR	= $33
	ORIGIRQ	= $c7bc	; ?
	RESLOOP	= $c615
	LEN	= $52
