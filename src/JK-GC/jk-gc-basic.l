	ISVAREND	= $c655	; ?
	CPTR	= $22
	NOSTRING	= $c6e8	; ?
	basic_patch	= $1
	VARTAB	= $2d
	GETSA	= $c615	; ?
	DSTACK	= $c623
	MARKECOL	= $dbe7
	ARRAY	= $c6c2	; ?
	STAT_VAR	= $3
	NEXTARR	= $c699	; ?
	IS0ASTR	= $c6d7	; ?
	KERNAL	= $e000
	BERANF	= $4c
	BEREND	= $5d
	BASIC	= $a000
	GARBCOL	= $b526
	COLBASE	= $d800
	CPYROM	= $c50e
	NOCOPY	= $c612	; ?
	EXIT	= $c58b	; ?
	ZPLEN	= $7
	SAVE	= $c6fe	; ?
	STRDP	= $22
	LASTRANGE	= $c581	; ?
	FRETOP	= $33
	COPYBACK	= $c5eb	; ?
	MARKEVID	= $7e7
	VAR	= $c64a
	NEXTSTR1	= $c5ab
	PTR	= $50
	ISDSTEND	= $c628	; ?
	ADVDESC	= $c6c5	; ?
	STAT_ARY	= $1
	NEXTBYT	= $c5d0
	STRINRANGE	= $c5a2	; ?
	ZPSTART	= $4c
	NEXTVAR	= $c64a
	BUF	= $e000
	EOSS	= $22	; unused
	MOVBLOCK	= $a3bf
	MARKE	= $2a
	ISARREND	= $c68d
	NEXTASTR	= $c6c2
	STAT	= $57
	SAVLOOP	= $c548
	PROZPORT	= $1
	NEXTBLOCK	= $c55c
	BUFSIZE	= $2000
	DESCSTACK	= $c617	; unused
	ZPEND	= $52
	COLLECT	= $c530	; ?
	NEWPTR	= $4e
	TOSS	= $19
	VIDBASE	= $400
	V_IRQ	= $314	; unused
	MEMEND	= $37
	ORIGVID	= $c6fc	; ?
	TSSP	= $16
	STREND	= $31
	MARKEOFF	= $3e7
	NEXTSTR	= $c5aa
	STRADR	= $58
	ROMSIZE	= $2000
	CHECKVAR	= $c65f	; ?
	MEMSIZ	= $37
	CORR	= $c6ed	; ?
	ARRAYS	= $c685	; ?
	LEN1	= $c5d7	; unused
	INSTALL	= $c500	; unused
	NBENTRY	= $c5d4	; ?
	CHECKTYPE	= $c67a	; ?
	VARS	= $c63c	; ?
	CHKAEND	= $c691
	MEMBEG	= $31	; unused
	BUFPTR	= $5f
	ORIGCOL	= $c6fd	; ?
	MEMROM	= $37
	MEMRAM	= $35
	NEXTDST	= $c625
	ARYTAB	= $2f
	MEMBAS	= $36	; unused
	STAT_SDS	= $5
	MARKEFARBE	= $9
	STRPTR	= $33
	RESLOOP	= $c58d
	LEN	= $52
