	ISVAREND	= $c671	; ?
	PROCPORT	= $1
	CPTR	= $22
	NOSTRING	= $c6fb	; ?
	basic_patch	= $1
	VARTAB	= $2d
	GETSA	= $c631	; ?
	DSTACK	= $c63f
	MARKCHAR	= $2a
	MARKCPOS	= $dbe7	; ?
	RETGETSA	= $c6f0	; ?
	ARRAY	= $c6d5	; ?
	STAT_VAR	= $3
	NEXTARR	= $c6ac	; ?
	IS0ASTR	= $c6ea	; ?
	KERNAL	= $e000
	BASIC	= $a000
	GARBCOL	= $b526
	COLBASE	= $d800	; ?
	MARKCOL	= $9
	CPYROM	= $c511
	NOCOPY	= $c62e	; ?
	EXIT	= $c598	; ?
	ZPLEN	= $7
	SAVE	= $c711	; ?
	STRDP	= $22
	LASTRANGE	= $c58e	; ?
	FRETOP	= $33
	COPYBACK	= $c603	; ?
	VAR	= $c666
	NEXTSTR1	= $c5c3
	PTR	= $50
	orig_movblock	= $1
	ISDSTEND	= $c644	; ?
	ADVDESC	= $c6d8	; ?
	STAT_ARY	= $1
	NEXTBYT	= $c5e8
	STRINRANGE	= $c5ba	; ?
	ZPSTART	= $4c
	NEXTVAR	= $c666
	BUF	= $e000
	EOSS	= $22	; unused
	MOVBLOCK	= $a3bf
	ISARREND	= $c6a0
	NEXTASTR	= $c6d5
	STAT	= $57
	SAVLOOP	= $c535
	MARKVPOS	= $7e7	; ?	; unused
	NEXTBLOCK	= $c569
	BUFSIZE	= $2000
	DESCSTACK	= $c633	; unused
	ZPEND	= $52
	COLLECT	= $c533	; ?
	NEWPTR	= $4e
	TOSS	= $19
	VIDBASE	= $400	; ?
	V_IRQ	= $314	; unused
	MEMEND	= $37
	ORIGVID	= $c70f	; ?
	TSSP	= $16
	STREND	= $31
	start	= $c500
	RNGEND	= $5d
	NEXTSTR	= $c5c2
	STRADR	= $58
	ROMSIZE	= $2000
	CHECKVAR	= $c67b	; ?
	MEMSIZ	= $37
	CORR	= $c700	; ?
	MARKOFF	= $3e7
	ARRAYS	= $c698	; ?
	INSTALL	= $c500	; unused
	NBENTRY	= $c5ec	; ?
	CHECKTYPE	= $c68d	; ?
	VARS	= $c658	; ?
	CHKAEND	= $c6a4
	MEMBEG	= $31	; unused
	BUFPTR	= $5f
	ORIGCOL	= $c710	; ?
	MEMROM	= $37
	RNGBEG	= $4c
	VIDPAGE	= $288
	MEMRAM	= $35
	NEXTDST	= $c641
	ARYTAB	= $2f
	MEMBAS	= $36	; unused
	STAT_SDS	= $5
	STRPTR	= $33
	RESLOOP	= $c59a
	LEN	= $52
