	ISVAREND	= $c65c	; ?
	PROCPORT	= $1
	CPTR	= $22
	NOSTRING	= $c6e6	; ?
	basic_patch	= $1
	VARTAB	= $2d
	GETSA	= $c61c	; ?
	DSTACK	= $c62a
	MARKCHAR	= $2a
	MARKCPOS	= $dbe7	; ?
	RETGETSA	= $c6db	; ?
	ARRAY	= $c6c0	; ?
	STAT_VAR	= $3
	NEXTARR	= $c697	; ?
	IS0ASTR	= $c6d5	; ?
	KERNAL	= $e000
	BASIC	= $a000
	GARBCOL	= $b526
	COLBASE	= $d800	; ?
	MARKCOL	= $9
	CPYROM	= $c511
	NOCOPY	= $c619	; ?
	EXIT	= $c58e	; ?
	ZPLEN	= $7
	SAVE	= $c6fc	; ?
	STRDP	= $22
	LASTRANGE	= $c584	; ?
	FRETOP	= $33
	COPYBACK	= $c5ee	; ?
	VAR	= $c651
	NEXTSTR1	= $c5ae
	PTR	= $50
	orig_movblock	= $1
	ISDSTEND	= $c62f	; ?
	ADVDESC	= $c6c3	; ?
	STAT_ARY	= $1
	NEXTBYT	= $c5d3
	STRINRANGE	= $c5a5	; ?
	ZPSTART	= $4c
	NEXTVAR	= $c651
	BUF	= $e000
	EOSS	= $22	; unused
	MOVBLOCK	= $a3bf
	ISARREND	= $c68b
	NEXTASTR	= $c6c0
	STAT	= $57
	SAVLOOP	= $c54b
	MARKVPOS	= $7e7	; ?
	NEXTBLOCK	= $c55f
	BUFSIZE	= $2000
	DESCSTACK	= $c61e	; unused
	ZPEND	= $52
	COLLECT	= $c533	; ?
	NEWPTR	= $4e
	TOSS	= $19
	VIDBASE	= $400	; ?
	V_IRQ	= $314	; unused
	MEMEND	= $37
	ORIGVID	= $c6fa	; ?
	TSSP	= $16
	STREND	= $31
	start	= $c500
	RNGEND	= $5d
	NEXTSTR	= $c5ad
	STRADR	= $58
	ROMSIZE	= $2000
	CHECKVAR	= $c666	; ?
	MEMSIZ	= $37
	CORR	= $c6eb	; ?
	MARKOFF	= $3e7
	ARRAYS	= $c683	; ?
	INSTALL	= $c500	; unused
	NBENTRY	= $c5d7	; ?
	CHECKTYPE	= $c678	; ?
	VARS	= $c643	; ?
	CHKAEND	= $c68f
	MEMBEG	= $31	; unused
	BUFPTR	= $5f
	ORIGCOL	= $c6fb	; ?
	MEMROM	= $37
	RNGBEG	= $4c
	VIDPAGE	= $288	; unused
	MEMRAM	= $35
	NEXTDST	= $c62c
	ARYTAB	= $2f
	MEMBAS	= $36	; unused
	STAT_SDS	= $5
	STRPTR	= $33
	RESLOOP	= $c590
	LEN	= $52
